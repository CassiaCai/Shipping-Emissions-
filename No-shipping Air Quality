#!/usr/bin/env python

##### Air Quality Simulations: (VAR) Daily Average over the Month (no shipping case) COMBINE_ACONC files
# Filler VAR is SO2.

###### Import all necessary (and some potentially unnecessary) packages
import matplotlib.pyplot as plt; import numpy as np; import netCDF4; from netCDF4 import Dataset
import pandas as pd; import numpy.ma as ma; import time as timeit; import os; import math
import itertools

######### WRF-CMAQ Air Quality Simulations

        ##### GET AVERAGE DAILY VALUES FOR AIR QUALITY (COMBINE_ACONC)
# Sum all the hourly values to get daily values
# Sum all daily values to get monthly values
# Divide monthly sum value by number of days

###### Using C1C2 grid as basegrid
basegrid= '/projects/b1045/jschnell/ForCassia/beta/smoke_out/latlon_ChicagoLADCO_d02.nc'
basegridC1C2 = Dataset(basegrid,mode='r')
C1C2lat = basegridC1C2.variables['lat'][:]
C1C2lon = basegridC1C2.variables['lon'][:]
#print(C1C2lat.data.shape)

##### Read into sample file 
sample = '/projects/b1045/wrf-cmaq/output/Chicago_LADCO/output_Cassia_noCMV_4km_sf_rrtmg_10_8_1_v3852/postprocess/COMBINE_ACONC_20180808.nc'
sampleread = Dataset(sample,mode='r')
#print(sampleread)
#sampleread.variables['SO2']

##### Get daily average over the month 
def getDailyData():
    total_sum = 0
    day_count = 0
    for month, day in itertools.product(range(8,10), range(1,32)):
        if month < 10:
            month_i = "0{}".format(month)
        else:
            month_i ="{}".format(month)
        if day < 10:
            day_i = "0{}".format(day)
        else:
            day_i = "{}".format(day)
        filename = "/projects/b1045/wrf-cmaq/output/Chicago_LADCO/output_Cassia_noCMV_4km_sf_rrtmg_10_8_1_v3852/postprocess/COMBINE_ACONC_2018{}{}.nc".format(month_i, day_i)
        try:
            day_data = Dataset(filename,mode='r')
            day_var = abs(day_data.variables["SO2"][:])
            day_var_sum = 0
            for i in range(0,24):
                day_var_sum = day_var[i,0,:,:]+day_var_sum
            total_sum = total_sum + day_var_sum
            day_count +=1
        except IOError:
            pass
    month_avg = total_sum/day_count
    return day_var, month_avg
# Other ways to get the average: Add up values for every hour of the day and divide by 24 for average hourly
# per day. Times that average value by 24 and add/loop through each day file and divide by number of days.

##### Run getDailyData
day_var, month_avg = getDailyData()
print(month_avg)

##### Getting the worst lat-lon
np.amin(month_avg)
np.amax(month_avg)
max_loc = np.where(month_avg == (np.amax(month_avg)))
# This comes out to [222, 331]
print(C1C2lat[222,331])
print(C1C2lon[222,331])
# The worst lat-lon is 42.951096N, 82.365234W

##### Plotting
import cartopy.crs as ccrs
import matplotlib
import cartopy.feature as cfeature
import cartopy

proj = ccrs.PlateCarree()
data_crs = ccrs.PlateCarree()

plt.figure(figsize=(15, 9))
ax = plt.axes(projection=proj)
ax.set_global()
ax.coastlines(resolution='110m')

extents = [-95, -79.25, 36, 49.25]
ax.set_extent(extents)
ax.add_feature(cartopy.feature.STATES, linewidth=1.5, edgecolor='black',alpha=0.2)

CS = plt.contourf(C1C2lon, C1C2lat, month_avg,100,transform=ccrs.PlateCarree(),cmap='Blues',vmax=100,vmin=0)

plt.title('Air Quality Simulations: SO2 Daily Average over the Month', size = 18)

m = plt.cm.ScalarMappable(cmap='Blues')
m.set_array(month_avg)
m.set_clim(0., 100)
cbar = plt.colorbar(m, boundaries=np.linspace(0, 110, 1000))
cbar.ax.set_yticklabels([0,10,20,30,40,50,60,70,80,90]) 
cbar.ax.get_yaxis().labelpad = 20
cbar.ax.set_ylabel(' SO2 concentration (ppbV) ', size = 12, rotation=270)

plt.show()

# ---------------------------------------------------------------------------------------------------------------------------
##### TO DO LIST
#QUESTION: Mask the lakes
# Time Series of Air Quality VAR Conc over the entire region? Or one particular area? (Likely not going to be added to this)
