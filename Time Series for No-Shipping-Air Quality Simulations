#!/usr/bin/env python

##### Time Series of Air Quality Simulations: (VAR) Daily Average over the Month (no shipping case) COMBINE_ACONC files
# Filler VAR is SO2.

import matplotlib.pyplot as plt; import numpy as np; import netCDF4; from netCDF4 import Dataset
import pandas as pd; import numpy.ma as ma; import time as timeit; import os; import math
import itertools

# -----------------------------------------------------
# Single daily file (hourly sums over the entire grid)
sample = '/projects/b1045/wrf-cmaq/output/Chicago_LADCO/output_Cassia_noCMV_4km_sf_rrtmg_10_8_1_v3852/postprocess/COMBINE_ACONC_20180809.nc'
sampleread = Dataset(sample,mode='r')
specified = sampleread.variables['SO2']

totalgridsumperhour = []

for i in range(0,24):
    day_var_sum = specified[i,0,:,:]
    sumovergrid = np.concatenate(day_var_sum).sum()
    totalgridsumperhour.append(sumovergrid)   
# print(totalgridsumperhour)

plt.plot(range(0,24), totalgridsumperhour, 'o-')
plt.title('Hourly SO2 Concentrations for 2018/08/09', size = 15)
plt.ylabel(' SO2 concentration (ppbV) ', size = 12, rotation=90)
plt.xlabel(' Time (Hour) ', size = 12, rotation=0)
plt.show()
# -----------------------------------------------------
# Hourly sums over the entire grid (hourly-data averaged over the month) 
def getAvHourlyData():
    allhours = []
    day_count = 0
    for month, day in itertools.product(range(8,10), range(1,32)):
        if month < 10:
            month_i = "0{}".format(month)
        else:
            month_i ="{}".format(month)
        if day < 10:
            day_i = "0{}".format(day)
        else:
            day_i = "{}".format(day)
        filename = "/projects/b1045/wrf-cmaq/output/Chicago_LADCO/output_Cassia_noCMV_4km_sf_rrtmg_10_8_1_v3852/postprocess/COMBINE_ACONC_2018{}{}.nc".format(month_i, day_i)
        try:
            day_data = Dataset(filename,mode='r')
            day_var = abs(day_data.variables["SO2"][:])
            for i in range(0,24):
                day_var_sum = day_var[i,0,:,:]
                sumovergridperhoureach = np.concatenate(day_var_sum).sum()
                allhours.append(sumovergridperhoureach)
        except IOError:
            pass
    return allhours

allhours = getAvHourlyData()
l = [ allhours [i:i + 24] for i in range(0, len(allhours), 24) ]
summedallhours = [sum(i) for i in zip(*l)]
daycount = 32
summedallhours[:] = [x / daycount for x in summedallhours]
# print(summedallhours[:])

plt.plot(range(0,24), summedallhours[:], 'o-')
plt.title('Hourly SO2 Concentrations over Month', size = 15)
plt.ylabel(' SO2 concentration (ppbV) ', size = 12, rotation=90)
plt.xlabel(' Time (Hour) ', size = 12, rotation=0)
plt.show()
# -----------------------------------------------------
# Creating graph with all hourly data plotted in one graph 
plt.figure(figsize=(15,10))
for lists in l:
    timed = plt.plot(lists,linestyle='-', linewidth=1)
    timed = plt.xlabel('Time (Hour)')
    timed = plt.xticks(np.arange(0, 24, step=1))
    timed = plt.ylabel('SO2 concentration (ppbV)')
plt.plot([11, 11], [20000, 95000], linestyle='--', color='black',lw=1)
plt.show()
# -----------------------------------------------------
# Creating graph with all hourly data plotted in one long graph 
plt.figure(figsize=(15,10))
plt.plot(range(0,768), allhours, '-o')
plt.title('Hourly SO2 Concentrations over Month', size = 15)
plt.ylabel(' SO2 concentration (ppbV) ', size = 12, rotation=90)
plt.xlabel(' Day Count ', size = 12, rotation=0)
days = list(range(1,768,24)) # It's 5!
years_str = ['1','2','3','4','5','6','7','8','9','10','11',
             '12','13','14','15','16','17','18','19','20',
             '21','22','23','24','25','26','27','28','29',
             '30','31','32']
plt. xticks(days,years_str,rotation=0)
plt.plot([0, 768], [91613.08, 91613.08], linestyle='--', color='black',lw=1)
plt.annotate('Simulated Max = 91613.08 ppbV', xy=(600,92650))
plt.show()
# -----------------------------------------------------
#QUESTION: What does hour 0 mean? What timezone is being used?
